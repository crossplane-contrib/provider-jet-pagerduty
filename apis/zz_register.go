/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1alpha1 "github.com/crossplane-contrib/provider-pagerduty/apis/addon/v1alpha1"
	v1alpha1business "github.com/crossplane-contrib/provider-pagerduty/apis/business/v1alpha1"
	v1alpha1escalation "github.com/crossplane-contrib/provider-pagerduty/apis/escalation/v1alpha1"
	v1alpha1event "github.com/crossplane-contrib/provider-pagerduty/apis/event/v1alpha1"
	v1alpha1extensions "github.com/crossplane-contrib/provider-pagerduty/apis/extensions/v1alpha1"
	v1alpha1maintenance "github.com/crossplane-contrib/provider-pagerduty/apis/maintenance/v1alpha1"
	v1alpha1response "github.com/crossplane-contrib/provider-pagerduty/apis/response/v1alpha1"
	v1alpha1ruleset "github.com/crossplane-contrib/provider-pagerduty/apis/ruleset/v1alpha1"
	v1alpha1schedule "github.com/crossplane-contrib/provider-pagerduty/apis/schedule/v1alpha1"
	v1alpha1service "github.com/crossplane-contrib/provider-pagerduty/apis/service/v1alpha1"
	v1alpha1slack "github.com/crossplane-contrib/provider-pagerduty/apis/slack/v1alpha1"
	v1alpha1tag "github.com/crossplane-contrib/provider-pagerduty/apis/tag/v1alpha1"
	v1alpha1team "github.com/crossplane-contrib/provider-pagerduty/apis/team/v1alpha1"
	v1alpha1user "github.com/crossplane-contrib/provider-pagerduty/apis/user/v1alpha1"
	v1alpha1apis "github.com/crossplane-contrib/provider-pagerduty/apis/v1alpha1"
	v1beta1 "github.com/crossplane-contrib/provider-pagerduty/apis/v1beta1"
	v1alpha1webhook "github.com/crossplane-contrib/provider-pagerduty/apis/webhook/v1alpha1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1alpha1business.SchemeBuilder.AddToScheme,
		v1alpha1escalation.SchemeBuilder.AddToScheme,
		v1alpha1event.SchemeBuilder.AddToScheme,
		v1alpha1extensions.SchemeBuilder.AddToScheme,
		v1alpha1maintenance.SchemeBuilder.AddToScheme,
		v1alpha1response.SchemeBuilder.AddToScheme,
		v1alpha1ruleset.SchemeBuilder.AddToScheme,
		v1alpha1schedule.SchemeBuilder.AddToScheme,
		v1alpha1service.SchemeBuilder.AddToScheme,
		v1alpha1slack.SchemeBuilder.AddToScheme,
		v1alpha1tag.SchemeBuilder.AddToScheme,
		v1alpha1team.SchemeBuilder.AddToScheme,
		v1alpha1user.SchemeBuilder.AddToScheme,
		v1alpha1apis.SchemeBuilder.AddToScheme,
		v1beta1.SchemeBuilder.AddToScheme,
		v1alpha1webhook.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}
