/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EmailFilterInitParameters struct {

	// Can be always or match.
	BodyMode *string `json:"bodyMode,omitempty" tf:"body_mode,omitempty"`

	// Should be a valid regex or null
	BodyRegex *string `json:"bodyRegex,omitempty" tf:"body_regex,omitempty"`

	// Can be always or match.
	FromEmailMode *string `json:"fromEmailMode,omitempty" tf:"from_email_mode,omitempty"`

	// Should be a valid regex or null
	FromEmailRegex *string `json:"fromEmailRegex,omitempty" tf:"from_email_regex,omitempty"`

	// Can be always or match.
	SubjectMode *string `json:"subjectMode,omitempty" tf:"subject_mode,omitempty"`

	// Should be a valid regex or null
	SubjectRegex *string `json:"subjectRegex,omitempty" tf:"subject_regex,omitempty"`
}

type EmailFilterObservation struct {

	// Can be always or match.
	BodyMode *string `json:"bodyMode,omitempty" tf:"body_mode,omitempty"`

	// Should be a valid regex or null
	BodyRegex *string `json:"bodyRegex,omitempty" tf:"body_regex,omitempty"`

	// Can be always or match.
	FromEmailMode *string `json:"fromEmailMode,omitempty" tf:"from_email_mode,omitempty"`

	// Should be a valid regex or null
	FromEmailRegex *string `json:"fromEmailRegex,omitempty" tf:"from_email_regex,omitempty"`

	// The ID of the service integration.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Can be always or match.
	SubjectMode *string `json:"subjectMode,omitempty" tf:"subject_mode,omitempty"`

	// Should be a valid regex or null
	SubjectRegex *string `json:"subjectRegex,omitempty" tf:"subject_regex,omitempty"`
}

type EmailFilterParameters struct {

	// Can be always or match.
	// +kubebuilder:validation:Optional
	BodyMode *string `json:"bodyMode,omitempty" tf:"body_mode,omitempty"`

	// Should be a valid regex or null
	// +kubebuilder:validation:Optional
	BodyRegex *string `json:"bodyRegex,omitempty" tf:"body_regex,omitempty"`

	// Can be always or match.
	// +kubebuilder:validation:Optional
	FromEmailMode *string `json:"fromEmailMode,omitempty" tf:"from_email_mode,omitempty"`

	// Should be a valid regex or null
	// +kubebuilder:validation:Optional
	FromEmailRegex *string `json:"fromEmailRegex,omitempty" tf:"from_email_regex,omitempty"`

	// Can be always or match.
	// +kubebuilder:validation:Optional
	SubjectMode *string `json:"subjectMode,omitempty" tf:"subject_mode,omitempty"`

	// Should be a valid regex or null
	// +kubebuilder:validation:Optional
	SubjectRegex *string `json:"subjectRegex,omitempty" tf:"subject_regex,omitempty"`
}

type EmailParserInitParameters struct {

	// Can be resolve or trigger.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	MatchPredicate []MatchPredicateInitParameters `json:"matchPredicate,omitempty" tf:"match_predicate,omitempty"`

	ValueExtractor []ValueExtractorInitParameters `json:"valueExtractor,omitempty" tf:"value_extractor,omitempty"`
}

type EmailParserObservation struct {

	// Can be resolve or trigger.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// The ID of the service integration.
	ID *float64 `json:"id,omitempty" tf:"id,omitempty"`

	MatchPredicate []MatchPredicateObservation `json:"matchPredicate,omitempty" tf:"match_predicate,omitempty"`

	ValueExtractor []ValueExtractorObservation `json:"valueExtractor,omitempty" tf:"value_extractor,omitempty"`
}

type EmailParserParameters struct {

	// Can be resolve or trigger.
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	MatchPredicate []MatchPredicateParameters `json:"matchPredicate" tf:"match_predicate,omitempty"`

	// +kubebuilder:validation:Optional
	ValueExtractor []ValueExtractorParameters `json:"valueExtractor,omitempty" tf:"value_extractor,omitempty"`
}

type IntegrationInitParameters struct {
	EmailFilter []EmailFilterInitParameters `json:"emailFilter,omitempty" tf:"email_filter,omitempty"`

	// Mode of Emails Filters feature (explained in PD docs). Can be all-email, or-rules-email or and-rules-email.
	EmailFilterMode *string `json:"emailFilterMode,omitempty" tf:"email_filter_mode,omitempty"`

	// Behaviour of Email Management feature (explained in PD docs). Can be on_new_email, on_new_email_subject, only_if_no_open_incidents or use_rules.
	EmailIncidentCreation *string `json:"emailIncidentCreation,omitempty" tf:"email_incident_creation,omitempty"`

	EmailParser []EmailParserInitParameters `json:"emailParser,omitempty" tf:"email_parser,omitempty"`

	// Can be open_new_incident or discard.
	EmailParsingFallback *string `json:"emailParsingFallback,omitempty" tf:"email_parsing_fallback,omitempty"`

	// This is the unique fully-qualified email address used for routing emails to this integration for processing.
	IntegrationEmail *string `json:"integrationEmail,omitempty" tf:"integration_email,omitempty"`

	// (Deprecated) This is the unique key used to route events to this integration when received via the PagerDuty Events API.
	IntegrationKey *string `json:"integrationKey,omitempty" tf:"integration_key,omitempty"`

	// The name of the service integration.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the service the integration should belong to.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-pagerduty/apis/service/v1alpha1.Service
	Service *string `json:"service,omitempty" tf:"service,omitempty"`

	// Reference to a Service in service to populate service.
	// +kubebuilder:validation:Optional
	ServiceRef *v1.Reference `json:"serviceRef,omitempty" tf:"-"`

	// Selector for a Service in service to populate service.
	// +kubebuilder:validation:Optional
	ServiceSelector *v1.Selector `json:"serviceSelector,omitempty" tf:"-"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// field instead.
	Vendor *string `json:"vendor,omitempty" tf:"vendor,omitempty"`
}

type IntegrationObservation struct {
	EmailFilter []EmailFilterObservation `json:"emailFilter,omitempty" tf:"email_filter,omitempty"`

	// Mode of Emails Filters feature (explained in PD docs). Can be all-email, or-rules-email or and-rules-email.
	EmailFilterMode *string `json:"emailFilterMode,omitempty" tf:"email_filter_mode,omitempty"`

	// Behaviour of Email Management feature (explained in PD docs). Can be on_new_email, on_new_email_subject, only_if_no_open_incidents or use_rules.
	EmailIncidentCreation *string `json:"emailIncidentCreation,omitempty" tf:"email_incident_creation,omitempty"`

	EmailParser []EmailParserObservation `json:"emailParser,omitempty" tf:"email_parser,omitempty"`

	// Can be open_new_incident or discard.
	EmailParsingFallback *string `json:"emailParsingFallback,omitempty" tf:"email_parsing_fallback,omitempty"`

	// URL at which the entity is uniquely displayed in the Web app.
	HTMLURL *string `json:"htmlUrl,omitempty" tf:"html_url,omitempty"`

	// The ID of the service integration.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// This is the unique fully-qualified email address used for routing emails to this integration for processing.
	IntegrationEmail *string `json:"integrationEmail,omitempty" tf:"integration_email,omitempty"`

	// (Deprecated) This is the unique key used to route events to this integration when received via the PagerDuty Events API.
	IntegrationKey *string `json:"integrationKey,omitempty" tf:"integration_key,omitempty"`

	// The name of the service integration.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the service the integration should belong to.
	Service *string `json:"service,omitempty" tf:"service,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// field instead.
	Vendor *string `json:"vendor,omitempty" tf:"vendor,omitempty"`
}

type IntegrationParameters struct {

	// +kubebuilder:validation:Optional
	EmailFilter []EmailFilterParameters `json:"emailFilter,omitempty" tf:"email_filter,omitempty"`

	// Mode of Emails Filters feature (explained in PD docs). Can be all-email, or-rules-email or and-rules-email.
	// +kubebuilder:validation:Optional
	EmailFilterMode *string `json:"emailFilterMode,omitempty" tf:"email_filter_mode,omitempty"`

	// Behaviour of Email Management feature (explained in PD docs). Can be on_new_email, on_new_email_subject, only_if_no_open_incidents or use_rules.
	// +kubebuilder:validation:Optional
	EmailIncidentCreation *string `json:"emailIncidentCreation,omitempty" tf:"email_incident_creation,omitempty"`

	// +kubebuilder:validation:Optional
	EmailParser []EmailParserParameters `json:"emailParser,omitempty" tf:"email_parser,omitempty"`

	// Can be open_new_incident or discard.
	// +kubebuilder:validation:Optional
	EmailParsingFallback *string `json:"emailParsingFallback,omitempty" tf:"email_parsing_fallback,omitempty"`

	// This is the unique fully-qualified email address used for routing emails to this integration for processing.
	// +kubebuilder:validation:Optional
	IntegrationEmail *string `json:"integrationEmail,omitempty" tf:"integration_email,omitempty"`

	// (Deprecated) This is the unique key used to route events to this integration when received via the PagerDuty Events API.
	// +kubebuilder:validation:Optional
	IntegrationKey *string `json:"integrationKey,omitempty" tf:"integration_key,omitempty"`

	// The name of the service integration.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the service the integration should belong to.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-pagerduty/apis/service/v1alpha1.Service
	// +kubebuilder:validation:Optional
	Service *string `json:"service,omitempty" tf:"service,omitempty"`

	// Reference to a Service in service to populate service.
	// +kubebuilder:validation:Optional
	ServiceRef *v1.Reference `json:"serviceRef,omitempty" tf:"-"`

	// Selector for a Service in service to populate service.
	// +kubebuilder:validation:Optional
	ServiceSelector *v1.Selector `json:"serviceSelector,omitempty" tf:"-"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// field instead.
	// +kubebuilder:validation:Optional
	Vendor *string `json:"vendor,omitempty" tf:"vendor,omitempty"`
}

type MatchPredicateInitParameters struct {
	Predicate []PredicateInitParameters `json:"predicate,omitempty" tf:"predicate,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchPredicateObservation struct {
	Predicate []PredicateObservation `json:"predicate,omitempty" tf:"predicate,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchPredicateParameters struct {

	// +kubebuilder:validation:Optional
	Predicate []PredicateParameters `json:"predicate,omitempty" tf:"predicate,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PredicateInitParameters struct {

	// Predicate value or valid regex.
	Matcher *string `json:"matcher,omitempty" tf:"matcher,omitempty"`

	// Can be subject, body or from_addresses.
	Part *string `json:"part,omitempty" tf:"part,omitempty"`

	Predicate []PredicatePredicateInitParameters `json:"predicate,omitempty" tf:"predicate,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PredicateObservation struct {

	// Predicate value or valid regex.
	Matcher *string `json:"matcher,omitempty" tf:"matcher,omitempty"`

	// Can be subject, body or from_addresses.
	Part *string `json:"part,omitempty" tf:"part,omitempty"`

	Predicate []PredicatePredicateObservation `json:"predicate,omitempty" tf:"predicate,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PredicateParameters struct {

	// Predicate value or valid regex.
	// +kubebuilder:validation:Optional
	Matcher *string `json:"matcher,omitempty" tf:"matcher,omitempty"`

	// Can be subject, body or from_addresses.
	// +kubebuilder:validation:Optional
	Part *string `json:"part,omitempty" tf:"part,omitempty"`

	// +kubebuilder:validation:Optional
	Predicate []PredicatePredicateParameters `json:"predicate,omitempty" tf:"predicate,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PredicatePredicateInitParameters struct {

	// Predicate value or valid regex.
	Matcher *string `json:"matcher,omitempty" tf:"matcher,omitempty"`

	// Can be subject, body or from_addresses.
	Part *string `json:"part,omitempty" tf:"part,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PredicatePredicateObservation struct {

	// Predicate value or valid regex.
	Matcher *string `json:"matcher,omitempty" tf:"matcher,omitempty"`

	// Can be subject, body or from_addresses.
	Part *string `json:"part,omitempty" tf:"part,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PredicatePredicateParameters struct {

	// Predicate value or valid regex.
	// +kubebuilder:validation:Optional
	Matcher *string `json:"matcher" tf:"matcher,omitempty"`

	// Can be subject, body or from_addresses.
	// +kubebuilder:validation:Optional
	Part *string `json:"part" tf:"part,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ValueExtractorInitParameters struct {
	EndsBefore *string `json:"endsBefore,omitempty" tf:"ends_before,omitempty"`

	// Can be subject, body or from_addresses.
	Part *string `json:"part,omitempty" tf:"part,omitempty"`

	// If type has value regex this value should contain valid regex.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	StartsAfter *string `json:"startsAfter,omitempty" tf:"starts_after,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// First value extractor should have name incident_key other value extractors should contain custom names.
	ValueName *string `json:"valueName,omitempty" tf:"value_name,omitempty"`
}

type ValueExtractorObservation struct {
	EndsBefore *string `json:"endsBefore,omitempty" tf:"ends_before,omitempty"`

	// Can be subject, body or from_addresses.
	Part *string `json:"part,omitempty" tf:"part,omitempty"`

	// If type has value regex this value should contain valid regex.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	StartsAfter *string `json:"startsAfter,omitempty" tf:"starts_after,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// First value extractor should have name incident_key other value extractors should contain custom names.
	ValueName *string `json:"valueName,omitempty" tf:"value_name,omitempty"`
}

type ValueExtractorParameters struct {

	// +kubebuilder:validation:Optional
	EndsBefore *string `json:"endsBefore,omitempty" tf:"ends_before,omitempty"`

	// Can be subject, body or from_addresses.
	// +kubebuilder:validation:Optional
	Part *string `json:"part" tf:"part,omitempty"`

	// If type has value regex this value should contain valid regex.
	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	// +kubebuilder:validation:Optional
	StartsAfter *string `json:"startsAfter,omitempty" tf:"starts_after,omitempty"`

	// The service type. Can be:
	// aws_cloudwatch_inbound_integration,
	// cloudkick_inbound_integration,
	// event_transformer_api_inbound_integration,
	// events_api_v2_inbound_integration (requires service alert_creation to be create_alerts_and_incidents),
	// generic_email_inbound_integration,
	// generic_events_api_inbound_integration,
	// keynote_inbound_integration,
	// nagios_inbound_integration,
	// pingdom_inbound_integrationor sql_monitor_inbound_integration.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// First value extractor should have name incident_key other value extractors should contain custom names.
	// +kubebuilder:validation:Optional
	ValueName *string `json:"valueName" tf:"value_name,omitempty"`
}

// IntegrationSpec defines the desired state of Integration
type IntegrationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IntegrationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider IntegrationInitParameters `json:"initProvider,omitempty"`
}

// IntegrationStatus defines the observed state of Integration.
type IntegrationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IntegrationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Integration is the Schema for the Integrations API. Creates and manages a service integration in PagerDuty.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,pagerduty}
type Integration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IntegrationSpec   `json:"spec"`
	Status            IntegrationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IntegrationList contains a list of Integrations
type IntegrationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Integration `json:"items"`
}

// Repository type metadata.
var (
	Integration_Kind             = "Integration"
	Integration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Integration_Kind}.String()
	Integration_KindAPIVersion   = Integration_Kind + "." + CRDGroupVersion.String()
	Integration_GroupVersionKind = CRDGroupVersion.WithKind(Integration_Kind)
)

func init() {
	SchemeBuilder.Register(&Integration{}, &IntegrationList{})
}
