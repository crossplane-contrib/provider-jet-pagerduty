/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionsAutomationActionInitParameters struct {

	// When true, PagerDuty's servers will automatically send this webhook request as soon as the resulting incident is created. When false, your incident responder will be able to manually trigger the Webhook via the PagerDuty website and mobile app.
	AutoSend *bool `json:"autoSend,omitempty" tf:"auto_send,omitempty"`

	// Specify custom key/value pairs that'll be sent with the webhook request as request headers.
	Header []AutomationActionHeaderInitParameters `json:"header,omitempty" tf:"header,omitempty"`

	// Name of this Webhook.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specify custom key/value pairs that'll be included in the webhook request's JSON payload.
	Parameter []AutomationActionParameterInitParameters `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The API endpoint where PagerDuty's servers will send the webhook request.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type ActionsAutomationActionObservation struct {

	// When true, PagerDuty's servers will automatically send this webhook request as soon as the resulting incident is created. When false, your incident responder will be able to manually trigger the Webhook via the PagerDuty website and mobile app.
	AutoSend *bool `json:"autoSend,omitempty" tf:"auto_send,omitempty"`

	// Specify custom key/value pairs that'll be sent with the webhook request as request headers.
	Header []AutomationActionHeaderObservation `json:"header,omitempty" tf:"header,omitempty"`

	// Name of this Webhook.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specify custom key/value pairs that'll be included in the webhook request's JSON payload.
	Parameter []AutomationActionParameterObservation `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The API endpoint where PagerDuty's servers will send the webhook request.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type ActionsAutomationActionParameters struct {

	// When true, PagerDuty's servers will automatically send this webhook request as soon as the resulting incident is created. When false, your incident responder will be able to manually trigger the Webhook via the PagerDuty website and mobile app.
	// +kubebuilder:validation:Optional
	AutoSend *bool `json:"autoSend,omitempty" tf:"auto_send,omitempty"`

	// Specify custom key/value pairs that'll be sent with the webhook request as request headers.
	// +kubebuilder:validation:Optional
	Header []AutomationActionHeaderParameters `json:"header,omitempty" tf:"header,omitempty"`

	// Name of this Webhook.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specify custom key/value pairs that'll be included in the webhook request's JSON payload.
	// +kubebuilder:validation:Optional
	Parameter []AutomationActionParameterParameters `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The API endpoint where PagerDuty's servers will send the webhook request.
	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

type ActionsExtractionInitParameters struct {

	// A RE2 regular expression that will be matched against field specified via the source argument. If the regex contains one or more capture groups, their values will be extracted and appended together. If it contains no capture groups, the whole match is used. This field can be ignored for template based extractions.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	// The path to the event field where the regex will be applied to extract a value. You can use any valid PCL path like event.summary and you can reference previously-defined variables using a path like variables.hostname. This field can be ignored for template based extractions.
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// The PagerDuty Common Event Format PD-CEF field that will be set with the value from the template or based on regex and source fields.
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// A string that will be used to populate the target field. You can reference variables or event data within your template using double curly braces. For example:
	Template *string `json:"template,omitempty" tf:"template,omitempty"`
}

type ActionsExtractionObservation struct {

	// A RE2 regular expression that will be matched against field specified via the source argument. If the regex contains one or more capture groups, their values will be extracted and appended together. If it contains no capture groups, the whole match is used. This field can be ignored for template based extractions.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	// The path to the event field where the regex will be applied to extract a value. You can use any valid PCL path like event.summary and you can reference previously-defined variables using a path like variables.hostname. This field can be ignored for template based extractions.
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// The PagerDuty Common Event Format PD-CEF field that will be set with the value from the template or based on regex and source fields.
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// A string that will be used to populate the target field. You can reference variables or event data within your template using double curly braces. For example:
	Template *string `json:"template,omitempty" tf:"template,omitempty"`
}

type ActionsExtractionParameters struct {

	// A RE2 regular expression that will be matched against field specified via the source argument. If the regex contains one or more capture groups, their values will be extracted and appended together. If it contains no capture groups, the whole match is used. This field can be ignored for template based extractions.
	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	// The path to the event field where the regex will be applied to extract a value. You can use any valid PCL path like event.summary and you can reference previously-defined variables using a path like variables.hostname. This field can be ignored for template based extractions.
	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// The PagerDuty Common Event Format PD-CEF field that will be set with the value from the template or based on regex and source fields.
	// +kubebuilder:validation:Optional
	Target *string `json:"target" tf:"target,omitempty"`

	// A string that will be used to populate the target field. You can reference variables or event data within your template using double curly braces. For example:
	// +kubebuilder:validation:Optional
	Template *string `json:"template,omitempty" tf:"template,omitempty"`
}

type ActionsIncidentCustomFieldUpdateInitParameters struct {

	// The ID of this set of rules. Rules in other sets can route events into this set using the rule's route_to property.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ActionsIncidentCustomFieldUpdateObservation struct {

	// The ID of this set of rules. Rules in other sets can route events into this set using the rule's route_to property.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ActionsIncidentCustomFieldUpdateParameters struct {

	// The ID of this set of rules. Rules in other sets can route events into this set using the rule's route_to property.
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`

	// The value to assign to this custom field
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ActionsInitParameters struct {

	// Add this text as a note on the resulting incident.
	Annotate *string `json:"annotate,omitempty" tf:"annotate,omitempty"`

	// Create a Webhook associated with the resulting incident.
	AutomationAction []AutomationActionInitParameters `json:"automationAction,omitempty" tf:"automation_action,omitempty"`

	// When true, this event will be dropped. Dropped events will not trigger or resolve an alert or an incident. Dropped events will not be evaluated against router rules.
	DropEvent *bool `json:"dropEvent,omitempty" tf:"drop_event,omitempty"`

	// The ID of the Escalation Policy you want to assign incidents to. Event rules with this action will override the Escalation Policy already set on a Service's settings, with what is configured by this action.
	EscalationPolicy *string `json:"escalationPolicy,omitempty" tf:"escalation_policy,omitempty"`

	// sets whether the resulting alert status is trigger or resolve. Allowed values are: trigger, resolve
	EventAction *string `json:"eventAction,omitempty" tf:"event_action,omitempty"`

	// Replace any CEF field or Custom Details object field using custom variables.
	Extraction []ExtractionInitParameters `json:"extraction,omitempty" tf:"extraction,omitempty"`

	// Assign a custom field to the resulting incident.
	IncidentCustomFieldUpdate []IncidentCustomFieldUpdateInitParameters `json:"incidentCustomFieldUpdate,omitempty" tf:"incident_custom_field_update,omitempty"`

	// The ID of the priority you want to set on resulting incident. Consider using the pagerduty_priority data source.
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// The ID of a Set from this Global Orchestration whose rules you also want to use with events that match this rule.
	RouteTo *string `json:"routeTo,omitempty" tf:"route_to,omitempty"`

	// sets Severity of the resulting alert. Allowed values are: info, error, warning, critical
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// Set whether the resulting alert is suppressed. Suppressed alerts will not trigger an incident.
	Suppress *bool `json:"suppress,omitempty" tf:"suppress,omitempty"`

	// The number of seconds to suspend the resulting alert before triggering. This effectively pauses incident notifications. If a resolve event arrives before the alert triggers then PagerDuty won't create an incident for this alert.
	Suspend *float64 `json:"suspend,omitempty" tf:"suspend,omitempty"`

	// Populate variables from event payloads and use those variables in other event actions.
	Variable []VariableInitParameters `json:"variable,omitempty" tf:"variable,omitempty"`
}

type ActionsObservation struct {

	// Add this text as a note on the resulting incident.
	Annotate *string `json:"annotate,omitempty" tf:"annotate,omitempty"`

	// Create a Webhook associated with the resulting incident.
	AutomationAction []AutomationActionObservation `json:"automationAction,omitempty" tf:"automation_action,omitempty"`

	// When true, this event will be dropped. Dropped events will not trigger or resolve an alert or an incident. Dropped events will not be evaluated against router rules.
	DropEvent *bool `json:"dropEvent,omitempty" tf:"drop_event,omitempty"`

	// The ID of the Escalation Policy you want to assign incidents to. Event rules with this action will override the Escalation Policy already set on a Service's settings, with what is configured by this action.
	EscalationPolicy *string `json:"escalationPolicy,omitempty" tf:"escalation_policy,omitempty"`

	// sets whether the resulting alert status is trigger or resolve. Allowed values are: trigger, resolve
	EventAction *string `json:"eventAction,omitempty" tf:"event_action,omitempty"`

	// Replace any CEF field or Custom Details object field using custom variables.
	Extraction []ExtractionObservation `json:"extraction,omitempty" tf:"extraction,omitempty"`

	// Assign a custom field to the resulting incident.
	IncidentCustomFieldUpdate []IncidentCustomFieldUpdateObservation `json:"incidentCustomFieldUpdate,omitempty" tf:"incident_custom_field_update,omitempty"`

	// The ID of the priority you want to set on resulting incident. Consider using the pagerduty_priority data source.
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// The ID of a Set from this Global Orchestration whose rules you also want to use with events that match this rule.
	RouteTo *string `json:"routeTo,omitempty" tf:"route_to,omitempty"`

	// sets Severity of the resulting alert. Allowed values are: info, error, warning, critical
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// Set whether the resulting alert is suppressed. Suppressed alerts will not trigger an incident.
	Suppress *bool `json:"suppress,omitempty" tf:"suppress,omitempty"`

	// The number of seconds to suspend the resulting alert before triggering. This effectively pauses incident notifications. If a resolve event arrives before the alert triggers then PagerDuty won't create an incident for this alert.
	Suspend *float64 `json:"suspend,omitempty" tf:"suspend,omitempty"`

	// Populate variables from event payloads and use those variables in other event actions.
	Variable []VariableObservation `json:"variable,omitempty" tf:"variable,omitempty"`
}

type ActionsParameters struct {

	// Add this text as a note on the resulting incident.
	// +kubebuilder:validation:Optional
	Annotate *string `json:"annotate,omitempty" tf:"annotate,omitempty"`

	// Create a Webhook associated with the resulting incident.
	// +kubebuilder:validation:Optional
	AutomationAction []AutomationActionParameters `json:"automationAction,omitempty" tf:"automation_action,omitempty"`

	// When true, this event will be dropped. Dropped events will not trigger or resolve an alert or an incident. Dropped events will not be evaluated against router rules.
	// +kubebuilder:validation:Optional
	DropEvent *bool `json:"dropEvent,omitempty" tf:"drop_event,omitempty"`

	// The ID of the Escalation Policy you want to assign incidents to. Event rules with this action will override the Escalation Policy already set on a Service's settings, with what is configured by this action.
	// +kubebuilder:validation:Optional
	EscalationPolicy *string `json:"escalationPolicy,omitempty" tf:"escalation_policy,omitempty"`

	// sets whether the resulting alert status is trigger or resolve. Allowed values are: trigger, resolve
	// +kubebuilder:validation:Optional
	EventAction *string `json:"eventAction,omitempty" tf:"event_action,omitempty"`

	// Replace any CEF field or Custom Details object field using custom variables.
	// +kubebuilder:validation:Optional
	Extraction []ExtractionParameters `json:"extraction,omitempty" tf:"extraction,omitempty"`

	// Assign a custom field to the resulting incident.
	// +kubebuilder:validation:Optional
	IncidentCustomFieldUpdate []IncidentCustomFieldUpdateParameters `json:"incidentCustomFieldUpdate,omitempty" tf:"incident_custom_field_update,omitempty"`

	// The ID of the priority you want to set on resulting incident. Consider using the pagerduty_priority data source.
	// +kubebuilder:validation:Optional
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// The ID of a Set from this Global Orchestration whose rules you also want to use with events that match this rule.
	// +kubebuilder:validation:Optional
	RouteTo *string `json:"routeTo,omitempty" tf:"route_to,omitempty"`

	// sets Severity of the resulting alert. Allowed values are: info, error, warning, critical
	// +kubebuilder:validation:Optional
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// Set whether the resulting alert is suppressed. Suppressed alerts will not trigger an incident.
	// +kubebuilder:validation:Optional
	Suppress *bool `json:"suppress,omitempty" tf:"suppress,omitempty"`

	// The number of seconds to suspend the resulting alert before triggering. This effectively pauses incident notifications. If a resolve event arrives before the alert triggers then PagerDuty won't create an incident for this alert.
	// +kubebuilder:validation:Optional
	Suspend *float64 `json:"suspend,omitempty" tf:"suspend,omitempty"`

	// Populate variables from event payloads and use those variables in other event actions.
	// +kubebuilder:validation:Optional
	Variable []VariableParameters `json:"variable,omitempty" tf:"variable,omitempty"`
}

type ActionsVariableInitParameters struct {

	// Name of this Webhook.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Path to a field in an event, in dot-notation. This supports both PagerDuty Common Event Format PD-CEF and non-CEF fields. Eg: Use event.summary for the summary CEF field. Use raw_event.fieldname to read from the original event fieldname data. You can use any valid PCL path.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Only regex is supported
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ActionsVariableObservation struct {

	// Name of this Webhook.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Path to a field in an event, in dot-notation. This supports both PagerDuty Common Event Format PD-CEF and non-CEF fields. Eg: Use event.summary for the summary CEF field. Use raw_event.fieldname to read from the original event fieldname data. You can use any valid PCL path.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Only regex is supported
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ActionsVariableParameters struct {

	// Name of this Webhook.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Path to a field in an event, in dot-notation. This supports both PagerDuty Common Event Format PD-CEF and non-CEF fields. Eg: Use event.summary for the summary CEF field. Use raw_event.fieldname to read from the original event fieldname data. You can use any valid PCL path.
	// +kubebuilder:validation:Optional
	Path *string `json:"path" tf:"path,omitempty"`

	// Only regex is supported
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// The value to assign to this custom field
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type AutomationActionHeaderInitParameters struct {

	// Name to identify the header
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AutomationActionHeaderObservation struct {

	// Name to identify the header
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AutomationActionHeaderParameters struct {

	// Name to identify the header
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// The value to assign to this custom field
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type AutomationActionInitParameters struct {

	// When true, PagerDuty's servers will automatically send this webhook request as soon as the resulting incident is created. When false, your incident responder will be able to manually trigger the Webhook via the PagerDuty website and mobile app.
	AutoSend *bool `json:"autoSend,omitempty" tf:"auto_send,omitempty"`

	// Specify custom key/value pairs that'll be sent with the webhook request as request headers.
	Header []HeaderInitParameters `json:"header,omitempty" tf:"header,omitempty"`

	// Name of this Webhook.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specify custom key/value pairs that'll be included in the webhook request's JSON payload.
	Parameter []ParameterInitParameters `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The API endpoint where PagerDuty's servers will send the webhook request.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type AutomationActionObservation struct {

	// When true, PagerDuty's servers will automatically send this webhook request as soon as the resulting incident is created. When false, your incident responder will be able to manually trigger the Webhook via the PagerDuty website and mobile app.
	AutoSend *bool `json:"autoSend,omitempty" tf:"auto_send,omitempty"`

	// Specify custom key/value pairs that'll be sent with the webhook request as request headers.
	Header []HeaderObservation `json:"header,omitempty" tf:"header,omitempty"`

	// Name of this Webhook.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specify custom key/value pairs that'll be included in the webhook request's JSON payload.
	Parameter []ParameterObservation `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The API endpoint where PagerDuty's servers will send the webhook request.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type AutomationActionParameterInitParameters struct {

	// Name to identify the header
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AutomationActionParameterObservation struct {

	// Name to identify the header
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AutomationActionParameterParameters struct {

	// Name to identify the header
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// The value to assign to this custom field
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type AutomationActionParameters struct {

	// When true, PagerDuty's servers will automatically send this webhook request as soon as the resulting incident is created. When false, your incident responder will be able to manually trigger the Webhook via the PagerDuty website and mobile app.
	// +kubebuilder:validation:Optional
	AutoSend *bool `json:"autoSend,omitempty" tf:"auto_send,omitempty"`

	// Specify custom key/value pairs that'll be sent with the webhook request as request headers.
	// +kubebuilder:validation:Optional
	Header []HeaderParameters `json:"header,omitempty" tf:"header,omitempty"`

	// Name of this Webhook.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specify custom key/value pairs that'll be included in the webhook request's JSON payload.
	// +kubebuilder:validation:Optional
	Parameter []ParameterParameters `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// The API endpoint where PagerDuty's servers will send the webhook request.
	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

type CatchAllInitParameters struct {

	// Actions that will be taken to change the resulting alert and incident, when an event matches this rule.
	Actions []ActionsInitParameters `json:"actions,omitempty" tf:"actions,omitempty"`
}

type CatchAllObservation struct {

	// Actions that will be taken to change the resulting alert and incident, when an event matches this rule.
	Actions []ActionsObservation `json:"actions,omitempty" tf:"actions,omitempty"`
}

type CatchAllParameters struct {

	// Actions that will be taken to change the resulting alert and incident, when an event matches this rule.
	// +kubebuilder:validation:Optional
	Actions []ActionsParameters `json:"actions" tf:"actions,omitempty"`
}

type ConditionInitParameters struct {

	// A PCL condition string.
	Expression *string `json:"expression,omitempty" tf:"expression,omitempty"`
}

type ConditionObservation struct {

	// A PCL condition string.
	Expression *string `json:"expression,omitempty" tf:"expression,omitempty"`
}

type ConditionParameters struct {

	// A PCL condition string.
	// +kubebuilder:validation:Optional
	Expression *string `json:"expression" tf:"expression,omitempty"`
}

type ExtractionInitParameters struct {

	// A RE2 regular expression that will be matched against field specified via the source argument. If the regex contains one or more capture groups, their values will be extracted and appended together. If it contains no capture groups, the whole match is used. This field can be ignored for template based extractions.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	// The path to the event field where the regex will be applied to extract a value. You can use any valid PCL path like event.summary and you can reference previously-defined variables using a path like variables.hostname. This field can be ignored for template based extractions.
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// The PagerDuty Common Event Format PD-CEF field that will be set with the value from the template or based on regex and source fields.
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// A string that will be used to populate the target field. You can reference variables or event data within your template using double curly braces. For example:
	Template *string `json:"template,omitempty" tf:"template,omitempty"`
}

type ExtractionObservation struct {

	// A RE2 regular expression that will be matched against field specified via the source argument. If the regex contains one or more capture groups, their values will be extracted and appended together. If it contains no capture groups, the whole match is used. This field can be ignored for template based extractions.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	// The path to the event field where the regex will be applied to extract a value. You can use any valid PCL path like event.summary and you can reference previously-defined variables using a path like variables.hostname. This field can be ignored for template based extractions.
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// The PagerDuty Common Event Format PD-CEF field that will be set with the value from the template or based on regex and source fields.
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// A string that will be used to populate the target field. You can reference variables or event data within your template using double curly braces. For example:
	Template *string `json:"template,omitempty" tf:"template,omitempty"`
}

type ExtractionParameters struct {

	// A RE2 regular expression that will be matched against field specified via the source argument. If the regex contains one or more capture groups, their values will be extracted and appended together. If it contains no capture groups, the whole match is used. This field can be ignored for template based extractions.
	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	// The path to the event field where the regex will be applied to extract a value. You can use any valid PCL path like event.summary and you can reference previously-defined variables using a path like variables.hostname. This field can be ignored for template based extractions.
	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// The PagerDuty Common Event Format PD-CEF field that will be set with the value from the template or based on regex and source fields.
	// +kubebuilder:validation:Optional
	Target *string `json:"target" tf:"target,omitempty"`

	// A string that will be used to populate the target field. You can reference variables or event data within your template using double curly braces. For example:
	// +kubebuilder:validation:Optional
	Template *string `json:"template,omitempty" tf:"template,omitempty"`
}

type HeaderInitParameters struct {

	// Name to identify the header
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HeaderObservation struct {

	// Name to identify the header
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HeaderParameters struct {

	// Name to identify the header
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// The value to assign to this custom field
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type IncidentCustomFieldUpdateInitParameters struct {

	// The ID of this set of rules. Rules in other sets can route events into this set using the rule's route_to property.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IncidentCustomFieldUpdateObservation struct {

	// The ID of this set of rules. Rules in other sets can route events into this set using the rule's route_to property.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IncidentCustomFieldUpdateParameters struct {

	// The ID of this set of rules. Rules in other sets can route events into this set using the rule's route_to property.
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`

	// The value to assign to this custom field
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type OrchestrationGlobalInitParameters struct {

	// the catch_all actions will be applied if an Event reaches the end of any set without matching any rules in that set.
	CatchAll []CatchAllInitParameters `json:"catchAll,omitempty" tf:"catch_all,omitempty"`

	// ID of the Event Orchestration to which this Global Orchestration belongs to.
	// +crossplane:generate:reference:type=Orchestration
	EventOrchestration *string `json:"eventOrchestration,omitempty" tf:"event_orchestration,omitempty"`

	// Reference to a Orchestration to populate eventOrchestration.
	// +kubebuilder:validation:Optional
	EventOrchestrationRef *v1.Reference `json:"eventOrchestrationRef,omitempty" tf:"-"`

	// Selector for a Orchestration to populate eventOrchestration.
	// +kubebuilder:validation:Optional
	EventOrchestrationSelector *v1.Selector `json:"eventOrchestrationSelector,omitempty" tf:"-"`

	// A Global Orchestration must contain at least a "start" set, but can contain any number of additional sets that are routed to by other rules to form a directional graph.
	Set []SetInitParameters `json:"set,omitempty" tf:"set,omitempty"`
}

type OrchestrationGlobalObservation struct {

	// the catch_all actions will be applied if an Event reaches the end of any set without matching any rules in that set.
	CatchAll []CatchAllObservation `json:"catchAll,omitempty" tf:"catch_all,omitempty"`

	// ID of the Event Orchestration to which this Global Orchestration belongs to.
	EventOrchestration *string `json:"eventOrchestration,omitempty" tf:"event_orchestration,omitempty"`

	// The ID of this set of rules. Rules in other sets can route events into this set using the rule's route_to property.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A Global Orchestration must contain at least a "start" set, but can contain any number of additional sets that are routed to by other rules to form a directional graph.
	Set []SetObservation `json:"set,omitempty" tf:"set,omitempty"`
}

type OrchestrationGlobalParameters struct {

	// the catch_all actions will be applied if an Event reaches the end of any set without matching any rules in that set.
	// +kubebuilder:validation:Optional
	CatchAll []CatchAllParameters `json:"catchAll,omitempty" tf:"catch_all,omitempty"`

	// ID of the Event Orchestration to which this Global Orchestration belongs to.
	// +crossplane:generate:reference:type=Orchestration
	// +kubebuilder:validation:Optional
	EventOrchestration *string `json:"eventOrchestration,omitempty" tf:"event_orchestration,omitempty"`

	// Reference to a Orchestration to populate eventOrchestration.
	// +kubebuilder:validation:Optional
	EventOrchestrationRef *v1.Reference `json:"eventOrchestrationRef,omitempty" tf:"-"`

	// Selector for a Orchestration to populate eventOrchestration.
	// +kubebuilder:validation:Optional
	EventOrchestrationSelector *v1.Selector `json:"eventOrchestrationSelector,omitempty" tf:"-"`

	// A Global Orchestration must contain at least a "start" set, but can contain any number of additional sets that are routed to by other rules to form a directional graph.
	// +kubebuilder:validation:Optional
	Set []SetParameters `json:"set,omitempty" tf:"set,omitempty"`
}

type ParameterInitParameters struct {

	// Name to identify the header
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ParameterObservation struct {

	// Name to identify the header
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ParameterParameters struct {

	// Name to identify the header
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// The value to assign to this custom field
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type RuleActionsInitParameters struct {

	// Add this text as a note on the resulting incident.
	Annotate *string `json:"annotate,omitempty" tf:"annotate,omitempty"`

	// Create a Webhook associated with the resulting incident.
	AutomationAction []ActionsAutomationActionInitParameters `json:"automationAction,omitempty" tf:"automation_action,omitempty"`

	// When true, this event will be dropped. Dropped events will not trigger or resolve an alert or an incident. Dropped events will not be evaluated against router rules.
	DropEvent *bool `json:"dropEvent,omitempty" tf:"drop_event,omitempty"`

	// The ID of the Escalation Policy you want to assign incidents to. Event rules with this action will override the Escalation Policy already set on a Service's settings, with what is configured by this action.
	EscalationPolicy *string `json:"escalationPolicy,omitempty" tf:"escalation_policy,omitempty"`

	// sets whether the resulting alert status is trigger or resolve. Allowed values are: trigger, resolve
	EventAction *string `json:"eventAction,omitempty" tf:"event_action,omitempty"`

	// Replace any CEF field or Custom Details object field using custom variables.
	Extraction []ActionsExtractionInitParameters `json:"extraction,omitempty" tf:"extraction,omitempty"`

	// Assign a custom field to the resulting incident.
	IncidentCustomFieldUpdate []ActionsIncidentCustomFieldUpdateInitParameters `json:"incidentCustomFieldUpdate,omitempty" tf:"incident_custom_field_update,omitempty"`

	// The ID of the priority you want to set on resulting incident. Consider using the pagerduty_priority data source.
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// The ID of a Set from this Global Orchestration whose rules you also want to use with events that match this rule.
	RouteTo *string `json:"routeTo,omitempty" tf:"route_to,omitempty"`

	// sets Severity of the resulting alert. Allowed values are: info, error, warning, critical
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// Set whether the resulting alert is suppressed. Suppressed alerts will not trigger an incident.
	Suppress *bool `json:"suppress,omitempty" tf:"suppress,omitempty"`

	// The number of seconds to suspend the resulting alert before triggering. This effectively pauses incident notifications. If a resolve event arrives before the alert triggers then PagerDuty won't create an incident for this alert.
	Suspend *float64 `json:"suspend,omitempty" tf:"suspend,omitempty"`

	// Populate variables from event payloads and use those variables in other event actions.
	Variable []ActionsVariableInitParameters `json:"variable,omitempty" tf:"variable,omitempty"`
}

type RuleActionsObservation struct {

	// Add this text as a note on the resulting incident.
	Annotate *string `json:"annotate,omitempty" tf:"annotate,omitempty"`

	// Create a Webhook associated with the resulting incident.
	AutomationAction []ActionsAutomationActionObservation `json:"automationAction,omitempty" tf:"automation_action,omitempty"`

	// When true, this event will be dropped. Dropped events will not trigger or resolve an alert or an incident. Dropped events will not be evaluated against router rules.
	DropEvent *bool `json:"dropEvent,omitempty" tf:"drop_event,omitempty"`

	// The ID of the Escalation Policy you want to assign incidents to. Event rules with this action will override the Escalation Policy already set on a Service's settings, with what is configured by this action.
	EscalationPolicy *string `json:"escalationPolicy,omitempty" tf:"escalation_policy,omitempty"`

	// sets whether the resulting alert status is trigger or resolve. Allowed values are: trigger, resolve
	EventAction *string `json:"eventAction,omitempty" tf:"event_action,omitempty"`

	// Replace any CEF field or Custom Details object field using custom variables.
	Extraction []ActionsExtractionObservation `json:"extraction,omitempty" tf:"extraction,omitempty"`

	// Assign a custom field to the resulting incident.
	IncidentCustomFieldUpdate []ActionsIncidentCustomFieldUpdateObservation `json:"incidentCustomFieldUpdate,omitempty" tf:"incident_custom_field_update,omitempty"`

	// The ID of the priority you want to set on resulting incident. Consider using the pagerduty_priority data source.
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// The ID of a Set from this Global Orchestration whose rules you also want to use with events that match this rule.
	RouteTo *string `json:"routeTo,omitempty" tf:"route_to,omitempty"`

	// sets Severity of the resulting alert. Allowed values are: info, error, warning, critical
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// Set whether the resulting alert is suppressed. Suppressed alerts will not trigger an incident.
	Suppress *bool `json:"suppress,omitempty" tf:"suppress,omitempty"`

	// The number of seconds to suspend the resulting alert before triggering. This effectively pauses incident notifications. If a resolve event arrives before the alert triggers then PagerDuty won't create an incident for this alert.
	Suspend *float64 `json:"suspend,omitempty" tf:"suspend,omitempty"`

	// Populate variables from event payloads and use those variables in other event actions.
	Variable []ActionsVariableObservation `json:"variable,omitempty" tf:"variable,omitempty"`
}

type RuleActionsParameters struct {

	// Add this text as a note on the resulting incident.
	// +kubebuilder:validation:Optional
	Annotate *string `json:"annotate,omitempty" tf:"annotate,omitempty"`

	// Create a Webhook associated with the resulting incident.
	// +kubebuilder:validation:Optional
	AutomationAction []ActionsAutomationActionParameters `json:"automationAction,omitempty" tf:"automation_action,omitempty"`

	// When true, this event will be dropped. Dropped events will not trigger or resolve an alert or an incident. Dropped events will not be evaluated against router rules.
	// +kubebuilder:validation:Optional
	DropEvent *bool `json:"dropEvent,omitempty" tf:"drop_event,omitempty"`

	// The ID of the Escalation Policy you want to assign incidents to. Event rules with this action will override the Escalation Policy already set on a Service's settings, with what is configured by this action.
	// +kubebuilder:validation:Optional
	EscalationPolicy *string `json:"escalationPolicy,omitempty" tf:"escalation_policy,omitempty"`

	// sets whether the resulting alert status is trigger or resolve. Allowed values are: trigger, resolve
	// +kubebuilder:validation:Optional
	EventAction *string `json:"eventAction,omitempty" tf:"event_action,omitempty"`

	// Replace any CEF field or Custom Details object field using custom variables.
	// +kubebuilder:validation:Optional
	Extraction []ActionsExtractionParameters `json:"extraction,omitempty" tf:"extraction,omitempty"`

	// Assign a custom field to the resulting incident.
	// +kubebuilder:validation:Optional
	IncidentCustomFieldUpdate []ActionsIncidentCustomFieldUpdateParameters `json:"incidentCustomFieldUpdate,omitempty" tf:"incident_custom_field_update,omitempty"`

	// The ID of the priority you want to set on resulting incident. Consider using the pagerduty_priority data source.
	// +kubebuilder:validation:Optional
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// The ID of a Set from this Global Orchestration whose rules you also want to use with events that match this rule.
	// +kubebuilder:validation:Optional
	RouteTo *string `json:"routeTo,omitempty" tf:"route_to,omitempty"`

	// sets Severity of the resulting alert. Allowed values are: info, error, warning, critical
	// +kubebuilder:validation:Optional
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// Set whether the resulting alert is suppressed. Suppressed alerts will not trigger an incident.
	// +kubebuilder:validation:Optional
	Suppress *bool `json:"suppress,omitempty" tf:"suppress,omitempty"`

	// The number of seconds to suspend the resulting alert before triggering. This effectively pauses incident notifications. If a resolve event arrives before the alert triggers then PagerDuty won't create an incident for this alert.
	// +kubebuilder:validation:Optional
	Suspend *float64 `json:"suspend,omitempty" tf:"suspend,omitempty"`

	// Populate variables from event payloads and use those variables in other event actions.
	// +kubebuilder:validation:Optional
	Variable []ActionsVariableParameters `json:"variable,omitempty" tf:"variable,omitempty"`
}

type RuleInitParameters struct {

	// Actions that will be taken to change the resulting alert and incident, when an event matches this rule.
	Actions []RuleActionsInitParameters `json:"actions,omitempty" tf:"actions,omitempty"`

	// Each of these conditions is evaluated to check if an event matches this rule. The rule is considered a match if any of these conditions match. If none are provided, the event will always match against the rule.
	Condition []ConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// Indicates whether the rule is disabled and would therefore not be evaluated.
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// A description of this rule's purpose.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`
}

type RuleObservation struct {

	// Actions that will be taken to change the resulting alert and incident, when an event matches this rule.
	Actions []RuleActionsObservation `json:"actions,omitempty" tf:"actions,omitempty"`

	// Each of these conditions is evaluated to check if an event matches this rule. The rule is considered a match if any of these conditions match. If none are provided, the event will always match against the rule.
	Condition []ConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`

	// Indicates whether the rule is disabled and would therefore not be evaluated.
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The ID of this set of rules. Rules in other sets can route events into this set using the rule's route_to property.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A description of this rule's purpose.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`
}

type RuleParameters struct {

	// Actions that will be taken to change the resulting alert and incident, when an event matches this rule.
	// +kubebuilder:validation:Optional
	Actions []RuleActionsParameters `json:"actions" tf:"actions,omitempty"`

	// Each of these conditions is evaluated to check if an event matches this rule. The rule is considered a match if any of these conditions match. If none are provided, the event will always match against the rule.
	// +kubebuilder:validation:Optional
	Condition []ConditionParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// Indicates whether the rule is disabled and would therefore not be evaluated.
	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// A description of this rule's purpose.
	// +kubebuilder:validation:Optional
	Label *string `json:"label,omitempty" tf:"label,omitempty"`
}

type SetInitParameters struct {

	// The ID of this set of rules. Rules in other sets can route events into this set using the rule's route_to property.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Global Orchestration evaluates Events against these Rules, one at a time, and applies all the actions for first rule it finds where the event matches the rule's conditions.
	Rule []RuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type SetObservation struct {

	// The ID of this set of rules. Rules in other sets can route events into this set using the rule's route_to property.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Global Orchestration evaluates Events against these Rules, one at a time, and applies all the actions for first rule it finds where the event matches the rule's conditions.
	Rule []RuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type SetParameters struct {

	// The ID of this set of rules. Rules in other sets can route events into this set using the rule's route_to property.
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`

	// The Global Orchestration evaluates Events against these Rules, one at a time, and applies all the actions for first rule it finds where the event matches the rule's conditions.
	// +kubebuilder:validation:Optional
	Rule []RuleParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type VariableInitParameters struct {

	// Name of this Webhook.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Path to a field in an event, in dot-notation. This supports both PagerDuty Common Event Format PD-CEF and non-CEF fields. Eg: Use event.summary for the summary CEF field. Use raw_event.fieldname to read from the original event fieldname data. You can use any valid PCL path.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Only regex is supported
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VariableObservation struct {

	// Name of this Webhook.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Path to a field in an event, in dot-notation. This supports both PagerDuty Common Event Format PD-CEF and non-CEF fields. Eg: Use event.summary for the summary CEF field. Use raw_event.fieldname to read from the original event fieldname data. You can use any valid PCL path.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Only regex is supported
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value to assign to this custom field
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VariableParameters struct {

	// Name of this Webhook.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Path to a field in an event, in dot-notation. This supports both PagerDuty Common Event Format PD-CEF and non-CEF fields. Eg: Use event.summary for the summary CEF field. Use raw_event.fieldname to read from the original event fieldname data. You can use any valid PCL path.
	// +kubebuilder:validation:Optional
	Path *string `json:"path" tf:"path,omitempty"`

	// Only regex is supported
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// The value to assign to this custom field
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// OrchestrationGlobalSpec defines the desired state of OrchestrationGlobal
type OrchestrationGlobalSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OrchestrationGlobalParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OrchestrationGlobalInitParameters `json:"initProvider,omitempty"`
}

// OrchestrationGlobalStatus defines the observed state of OrchestrationGlobal.
type OrchestrationGlobalStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OrchestrationGlobalObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// OrchestrationGlobal is the Schema for the OrchestrationGlobals API. Creates and manages a Global Orchestration for an Event Orchestration.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,pagerduty}
type OrchestrationGlobal struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.catchAll) || (has(self.initProvider) && has(self.initProvider.catchAll))",message="spec.forProvider.catchAll is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.set) || (has(self.initProvider) && has(self.initProvider.set))",message="spec.forProvider.set is a required parameter"
	Spec   OrchestrationGlobalSpec   `json:"spec"`
	Status OrchestrationGlobalStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OrchestrationGlobalList contains a list of OrchestrationGlobals
type OrchestrationGlobalList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OrchestrationGlobal `json:"items"`
}

// Repository type metadata.
var (
	OrchestrationGlobal_Kind             = "OrchestrationGlobal"
	OrchestrationGlobal_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OrchestrationGlobal_Kind}.String()
	OrchestrationGlobal_KindAPIVersion   = OrchestrationGlobal_Kind + "." + CRDGroupVersion.String()
	OrchestrationGlobal_GroupVersionKind = CRDGroupVersion.WithKind(OrchestrationGlobal_Kind)
)

func init() {
	SchemeBuilder.Register(&OrchestrationGlobal{}, &OrchestrationGlobalList{})
}
