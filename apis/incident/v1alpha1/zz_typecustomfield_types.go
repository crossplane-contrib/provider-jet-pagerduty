/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TypeCustomFieldInitParameters struct {

	// [Updating causes resource replacement] The type of the data of this custom field. Can be one of string, integer, float, boolean, datetime, or url when data_type is single_value, otherwise must be string. Update
	DataType *string `json:"dataType,omitempty" tf:"data_type,omitempty"`

	// The default value to set when new incidents are created. Always specified as a string.
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// The description of the custom field.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of the custom Type.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Whether the custom field is enabled. Defaults to true if not provided.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The options for the custom field. Can only be applied to fields with a type of single_value_fixed or multi_value_fixed.
	// +listType=set
	FieldOptions []*string `json:"fieldOptions,omitempty" tf:"field_options,omitempty"`

	// [Updating causes resource replacement] The field type of the field. Must be one of single_value, single_value_fixed, multi_value, or multi_value_fixed.
	FieldType *string `json:"fieldType,omitempty" tf:"field_type,omitempty"`

	// [Updating causes resource replacement] The id of the incident type the custom field is associated with.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-pagerduty/apis/incident/v1alpha1.IncidentType
	IncidentType *string `json:"incidentType,omitempty" tf:"incident_type,omitempty"`

	// Reference to a IncidentType in incident to populate incidentType.
	// +kubebuilder:validation:Optional
	IncidentTypeRef *v1.Reference `json:"incidentTypeRef,omitempty" tf:"-"`

	// Selector for a IncidentType in incident to populate incidentType.
	// +kubebuilder:validation:Optional
	IncidentTypeSelector *v1.Selector `json:"incidentTypeSelector,omitempty" tf:"-"`

	// [Updating causes resource replacement] The name of the custom field.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TypeCustomFieldObservation struct {

	// [Updating causes resource replacement] The type of the data of this custom field. Can be one of string, integer, float, boolean, datetime, or url when data_type is single_value, otherwise must be string. Update
	DataType *string `json:"dataType,omitempty" tf:"data_type,omitempty"`

	// The default value to set when new incidents are created. Always specified as a string.
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// The description of the custom field.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of the custom Type.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Whether the custom field is enabled. Defaults to true if not provided.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The options for the custom field. Can only be applied to fields with a type of single_value_fixed or multi_value_fixed.
	// +listType=set
	FieldOptions []*string `json:"fieldOptions,omitempty" tf:"field_options,omitempty"`

	// [Updating causes resource replacement] The field type of the field. Must be one of single_value, single_value_fixed, multi_value, or multi_value_fixed.
	FieldType *string `json:"fieldType,omitempty" tf:"field_type,omitempty"`

	// The ID of the field.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// [Updating causes resource replacement] The id of the incident type the custom field is associated with.
	IncidentType *string `json:"incidentType,omitempty" tf:"incident_type,omitempty"`

	// [Updating causes resource replacement] The name of the custom field.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The API show URL at which the object is accessible.
	Self *string `json:"self,omitempty" tf:"self,omitempty"`

	// A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to name, though it is not intended to be an identifier.
	Summary *string `json:"summary,omitempty" tf:"summary,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TypeCustomFieldParameters struct {

	// [Updating causes resource replacement] The type of the data of this custom field. Can be one of string, integer, float, boolean, datetime, or url when data_type is single_value, otherwise must be string. Update
	// +kubebuilder:validation:Optional
	DataType *string `json:"dataType,omitempty" tf:"data_type,omitempty"`

	// The default value to set when new incidents are created. Always specified as a string.
	// +kubebuilder:validation:Optional
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// The description of the custom field.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of the custom Type.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Whether the custom field is enabled. Defaults to true if not provided.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The options for the custom field. Can only be applied to fields with a type of single_value_fixed or multi_value_fixed.
	// +kubebuilder:validation:Optional
	// +listType=set
	FieldOptions []*string `json:"fieldOptions,omitempty" tf:"field_options,omitempty"`

	// [Updating causes resource replacement] The field type of the field. Must be one of single_value, single_value_fixed, multi_value, or multi_value_fixed.
	// +kubebuilder:validation:Optional
	FieldType *string `json:"fieldType,omitempty" tf:"field_type,omitempty"`

	// [Updating causes resource replacement] The id of the incident type the custom field is associated with.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-pagerduty/apis/incident/v1alpha1.IncidentType
	// +kubebuilder:validation:Optional
	IncidentType *string `json:"incidentType,omitempty" tf:"incident_type,omitempty"`

	// Reference to a IncidentType in incident to populate incidentType.
	// +kubebuilder:validation:Optional
	IncidentTypeRef *v1.Reference `json:"incidentTypeRef,omitempty" tf:"-"`

	// Selector for a IncidentType in incident to populate incidentType.
	// +kubebuilder:validation:Optional
	IncidentTypeSelector *v1.Selector `json:"incidentTypeSelector,omitempty" tf:"-"`

	// [Updating causes resource replacement] The name of the custom field.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

// TypeCustomFieldSpec defines the desired state of TypeCustomField
type TypeCustomFieldSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TypeCustomFieldParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TypeCustomFieldInitParameters `json:"initProvider,omitempty"`
}

// TypeCustomFieldStatus defines the observed state of TypeCustomField.
type TypeCustomFieldStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TypeCustomFieldObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TypeCustomField is the Schema for the TypeCustomFields API. Creates and manages a incident type custom field in PagerDuty.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,pagerduty}
type TypeCustomField struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dataType) || (has(self.initProvider) && has(self.initProvider.dataType))",message="spec.forProvider.dataType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) && has(self.initProvider.displayName))",message="spec.forProvider.displayName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   TypeCustomFieldSpec   `json:"spec"`
	Status TypeCustomFieldStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TypeCustomFieldList contains a list of TypeCustomFields
type TypeCustomFieldList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TypeCustomField `json:"items"`
}

// Repository type metadata.
var (
	TypeCustomField_Kind             = "TypeCustomField"
	TypeCustomField_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TypeCustomField_Kind}.String()
	TypeCustomField_KindAPIVersion   = TypeCustomField_Kind + "." + CRDGroupVersion.String()
	TypeCustomField_GroupVersionKind = CRDGroupVersion.WithKind(TypeCustomField_Kind)
)

func init() {
	SchemeBuilder.Register(&TypeCustomField{}, &TypeCustomFieldList{})
}
