/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IncidentTypeInitParameters struct {

	// A succinct description of the Incident Type.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of the Incident Type. Usage of the prefixes PD, PagerDuty, or the suffixes Default, or (Default) is prohibited.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// State of this Incident Type object. Defaults to true if not provided.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The name of the Incident Type. Usage of the suffix _default is prohibited. This cannot be changed once the incident type has been created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The parent type of the Incident Type. Either name or id of the parent type can be used.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-pagerduty/apis/incident/v1alpha1.IncidentType
	ParentType *string `json:"parentType,omitempty" tf:"parent_type,omitempty"`

	// Reference to a IncidentType in incident to populate parentType.
	// +kubebuilder:validation:Optional
	ParentTypeRef *v1.Reference `json:"parentTypeRef,omitempty" tf:"-"`

	// Selector for a IncidentType in incident to populate parentType.
	// +kubebuilder:validation:Optional
	ParentTypeSelector *v1.Selector `json:"parentTypeSelector,omitempty" tf:"-"`
}

type IncidentTypeObservation struct {

	// A succinct description of the Incident Type.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of the Incident Type. Usage of the prefixes PD, PagerDuty, or the suffixes Default, or (Default) is prohibited.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// State of this Incident Type object. Defaults to true if not provided.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The unique identifier of the incident type.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the Incident Type. Usage of the suffix _default is prohibited. This cannot be changed once the incident type has been created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The parent type of the Incident Type. Either name or id of the parent type can be used.
	ParentType *string `json:"parentType,omitempty" tf:"parent_type,omitempty"`

	// A string that determines the schema of the object.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IncidentTypeParameters struct {

	// A succinct description of the Incident Type.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of the Incident Type. Usage of the prefixes PD, PagerDuty, or the suffixes Default, or (Default) is prohibited.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// State of this Incident Type object. Defaults to true if not provided.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The name of the Incident Type. Usage of the suffix _default is prohibited. This cannot be changed once the incident type has been created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The parent type of the Incident Type. Either name or id of the parent type can be used.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-pagerduty/apis/incident/v1alpha1.IncidentType
	// +kubebuilder:validation:Optional
	ParentType *string `json:"parentType,omitempty" tf:"parent_type,omitempty"`

	// Reference to a IncidentType in incident to populate parentType.
	// +kubebuilder:validation:Optional
	ParentTypeRef *v1.Reference `json:"parentTypeRef,omitempty" tf:"-"`

	// Selector for a IncidentType in incident to populate parentType.
	// +kubebuilder:validation:Optional
	ParentTypeSelector *v1.Selector `json:"parentTypeSelector,omitempty" tf:"-"`
}

// IncidentTypeSpec defines the desired state of IncidentType
type IncidentTypeSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IncidentTypeParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider IncidentTypeInitParameters `json:"initProvider,omitempty"`
}

// IncidentTypeStatus defines the observed state of IncidentType.
type IncidentTypeStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IncidentTypeObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// IncidentType is the Schema for the IncidentTypes API. Creates and manages a incident_type in PagerDuty.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,pagerduty}
type IncidentType struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) && has(self.initProvider.displayName))",message="spec.forProvider.displayName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   IncidentTypeSpec   `json:"spec"`
	Status IncidentTypeStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IncidentTypeList contains a list of IncidentTypes
type IncidentTypeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []IncidentType `json:"items"`
}

// Repository type metadata.
var (
	IncidentType_Kind             = "IncidentType"
	IncidentType_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: IncidentType_Kind}.String()
	IncidentType_KindAPIVersion   = IncidentType_Kind + "." + CRDGroupVersion.String()
	IncidentType_GroupVersionKind = CRDGroupVersion.WithKind(IncidentType_Kind)
)

func init() {
	SchemeBuilder.Register(&IncidentType{}, &IncidentTypeList{})
}
