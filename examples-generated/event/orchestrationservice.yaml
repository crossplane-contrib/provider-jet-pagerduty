apiVersion: event.pagerduty.crossplane.io/v1alpha1
kind: OrchestrationService
metadata:
  annotations:
    meta.upbound.io/example-id: event/v1alpha1/orchestrationservice
  labels:
    testing.upbound.io/example-name: www
  name: www
spec:
  forProvider:
    catchAll:
    - actions:
      - {}
    serviceSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    set:
    - id: start
      rule:
      - actions:
        - extraction:
          - target: event.custom_details.hostname
            template: '{{variables.hostname}}'
          - regex: www (.*) service
            source: event.source
            target: event.source
          routeTo: step-two
          variable:
          - name: hostname
            path: event.component
            type: regex
            value: 'hostname: (.*)'
        label: Always apply some consistent event transformations to all events
    - id: step-two
      rule:
      - actions:
        - annotate: 'Please use our P1 runbook: https://docs.test/p1-runbook'
          priority: ${data.pagerduty_priority.p1.id}
        condition:
        - expression: event.severity matches 'critical'
        label: All critical alerts should be treated as P1 incident
      - actions:
        - automationAction:
          - autoSend: true
            header:
            - key: X-Notification-Source
              value: PagerDuty Incident Webhook
            name: Canary Slack Notification
            parameter:
            - key: channel
              value: '#my-team-channel'
            - key: message
              value: something is wrong with the canary deployment
            url: https://our-slack-listerner.test/canary-notification
        condition:
        - expression: event.custom_details.hostname matches part 'canary'
        label: If there's something wrong on the canary let the team know about it
          in our deployments Slack channel
      - actions:
        - suppress: true
        condition:
        - expression: event.severity matches 'info' and not (now in Mon,Tue,Wed,Thu,Fri
            09:00:00 to 17:00:00 America/Los_Angeles)
        label: Never bother the on-call for info-level events outside of work hours

---

apiVersion: escalation.pagerduty.crossplane.io/v1alpha1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: event/v1alpha1/orchestrationservice
  labels:
    testing.upbound.io/example-name: foo
  name: foo
spec:
  forProvider:
    name: Engineering Escalation Policy
    numLoops: 2
    rule:
    - escalationDelayInMinutes: 10
      target:
      - id: ${pagerduty_user.example.id}
        type: user

---

apiVersion: service.pagerduty.crossplane.io/v1alpha1
kind: Service
metadata:
  annotations:
    meta.upbound.io/example-id: event/v1alpha1/orchestrationservice
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    acknowledgementTimeout: 600
    alertCreation: create_alerts_and_incidents
    autoResolveTimeout: 14400
    escalationPolicySelector:
      matchLabels:
        testing.upbound.io/example-name: example
    name: My Web App

---

apiVersion: team.pagerduty.crossplane.io/v1alpha1
kind: Team
metadata:
  annotations:
    meta.upbound.io/example-id: event/v1alpha1/orchestrationservice
  labels:
    testing.upbound.io/example-name: engineering
  name: engineering
spec:
  forProvider:
    name: Engineering

---

apiVersion: user.pagerduty.crossplane.io/v1alpha1
kind: User
metadata:
  annotations:
    meta.upbound.io/example-id: event/v1alpha1/orchestrationservice
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    email: 125.greenholt.earline@graham.name
    name: Earline Greenholt

---

