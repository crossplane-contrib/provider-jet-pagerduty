---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: eventrules.service.pagerduty.crossplane.io
spec:
  group: service.pagerduty.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - pagerduty
    kind: EventRule
    listKind: EventRuleList
    plural: eventrules
    singular: eventrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EventRule is the Schema for the EventRules API. Creates and manages
          a service event rule in PagerDuty.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EventRuleSpec defines the desired state of EventRule
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  actions:
                    description: Actions to apply to an event if the conditions match.
                    items:
                      properties:
                        annotate:
                          description: Note added to the event.
                          items:
                            properties:
                              value:
                                description: Boolean value that indicates if the alert
                                  should be suppressed before the indicated threshold
                                  values are met.
                                type: string
                            type: object
                          type: array
                        eventAction:
                          description: An object with a single value field. The value
                            sets whether the resulting alert status is trigger or
                            resolve.
                          items:
                            properties:
                              value:
                                description: Boolean value that indicates if the alert
                                  should be suppressed before the indicated threshold
                                  values are met.
                                type: string
                            type: object
                          type: array
                        extractions:
                          description: 'Allows you to copy important data from one
                            event field to another. Extraction objects may use either
                            of the following field structures:'
                          items:
                            properties:
                              regex:
                                description: The conditions that need to be met for
                                  the extraction to happen. Must use valid RE2 regular
                                  expression syntax.
                                type: string
                              source:
                                description: Field where the data is being copied
                                  from. Must be a PagerDuty Common Event Format (PD-CEF)
                                  field.
                                type: string
                              target:
                                description: Field where the data is being copied
                                  to. Must be a PagerDuty Common Event Format (PD-CEF)
                                  field.
                                type: string
                              template:
                                description: A customized field message. This can
                                  also include variables extracted from the payload
                                  by using string interpolation.
                                type: string
                            type: object
                          type: array
                        priority:
                          description: The ID of the priority applied to the event.
                          items:
                            properties:
                              value:
                                description: Boolean value that indicates if the alert
                                  should be suppressed before the indicated threshold
                                  values are met.
                                type: string
                            type: object
                          type: array
                        severity:
                          description: The severity level of the event. Can be either
                            info,error,warning, or critical.
                          items:
                            properties:
                              value:
                                description: Boolean value that indicates if the alert
                                  should be suppressed before the indicated threshold
                                  values are met.
                                type: string
                            type: object
                          type: array
                        suppress:
                          description: Controls whether an alert is suppressed (does
                            not create an incident).
                          items:
                            properties:
                              thresholdTimeAmount:
                                description: The number value of the threshold_time_unit
                                  before an incident is created.
                                type: number
                              thresholdTimeUnit:
                                description: The seconds,minutes, or hours the threshold_time_amount
                                  should be measured.
                                type: string
                              thresholdValue:
                                description: The number of alerts that should be suppressed.
                                type: number
                              value:
                                description: Boolean value that indicates if the alert
                                  should be suppressed before the indicated threshold
                                  values are met.
                                type: boolean
                            type: object
                          type: array
                        suspend:
                          description: An object with a single value field. The value
                            sets the length of time to suspend the resulting alert
                            before triggering.
                          items:
                            properties:
                              value:
                                description: Boolean value that indicates if the alert
                                  should be suppressed before the indicated threshold
                                  values are met.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  conditions:
                    description: Conditions evaluated to check if an event matches
                      this event rule.
                    items:
                      properties:
                        operator:
                          description: Operator to combine sub-conditions. Can be
                            and or or.
                          type: string
                        subconditions:
                          description: List of sub-conditions that define the condition.
                          items:
                            properties:
                              operator:
                                description: Operator to combine sub-conditions. Can
                                  be and or or.
                                type: string
                              parameter:
                                description: Parameter for the sub-condition. It requires
                                  both a path and value to be set. The path value
                                  must be a PagerDuty Common Event Format (PD-CEF)
                                  field.
                                items:
                                  properties:
                                    path:
                                      description: Path to a field in an event, in
                                        dot-notation. For Event Rules on a Service,
                                        this will have to be a PD-CEF field.
                                      type: string
                                    value:
                                      description: Boolean value that indicates if
                                        the alert should be suppressed before the
                                        indicated threshold values are met.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  disabled:
                    description: Indicates whether the rule is disabled and would
                      therefore not be evaluated.
                    type: boolean
                  position:
                    description: Position/index of the rule within the service.
                    type: number
                  service:
                    description: The ID of the service that the rule belongs to.
                    type: string
                  serviceRef:
                    description: Reference to a Service to populate service.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceSelector:
                    description: Selector for a Service to populate service.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  timeFrame:
                    description: Settings for scheduling the rule.
                    items:
                      properties:
                        activeBetween:
                          description: Values for executing the rule during a specific
                            time period.
                          items:
                            properties:
                              endTime:
                                description: Ending of the scheduled time when the
                                  rule should execute.  Unix timestamp in milliseconds.
                                type: number
                              startTime:
                                description: Time when the schedule will start. Unix
                                  timestamp in milliseconds. For example, if you have
                                  a rule with a start_time of 0 and a duration of
                                  60,000 then that rule would be active from 00:00
                                  to 00:01. If the start_time was 3,600,000 the it
                                  would be active starting at 01:00.
                                type: number
                            type: object
                          type: array
                        scheduledWeekly:
                          description: Values for executing the rule on a recurring
                            schedule.
                          items:
                            properties:
                              duration:
                                description: Length of time the schedule will be active.  Unix
                                  timestamp in milliseconds.
                                type: number
                              startTime:
                                description: Time when the schedule will start. Unix
                                  timestamp in milliseconds. For example, if you have
                                  a rule with a start_time of 0 and a duration of
                                  60,000 then that rule would be active from 00:00
                                  to 00:01. If the start_time was 3,600,000 the it
                                  would be active starting at 01:00.
                                type: number
                              timezone:
                                description: Timezone for the given schedule.
                                type: string
                              weekdays:
                                description: An integer array representing which days
                                  during the week the rule executes. For example weekdays
                                  = [1,3,7] would execute on Monday, Wednesday and
                                  Sunday.
                                items:
                                  type: number
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  variable:
                    description: 'Populate variables from event payloads and use those
                      variables in other event actions. NOTE: A rule can have multiple'
                    items:
                      properties:
                        name:
                          description: The name of the variable.
                          type: string
                        parameters:
                          description: The parameters for performing the operation
                            to populate the variable.
                          items:
                            properties:
                              path:
                                description: Path to a field in an event, in dot-notation.
                                  For Event Rules on a Service, this will have to
                                  be a PD-CEF field.
                                type: string
                              value:
                                description: Boolean value that indicates if the alert
                                  should be suppressed before the indicated threshold
                                  values are met.
                                type: string
                            type: object
                          type: array
                        type:
                          description: Type of operation to populate the variable.
                            Usually regex.
                          type: string
                      type: object
                    type: array
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EventRuleStatus defines the observed state of EventRule.
            properties:
              atProvider:
                properties:
                  id:
                    description: The ID of the rule.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
