---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: plays.response.pagerduty.crossplane.io
spec:
  group: response.pagerduty.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - pagerduty
    kind: Play
    listKind: PlayList
    plural: plays
    singular: play
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Play is the Schema for the Plays API. Creates and manages a response
          play in PagerDuty.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PlaySpec defines the desired state of Play
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  conferenceNumber:
                    description: The telephone number that will be set as the conference
                      number for any incident on which this response play is run.
                    type: string
                  conferenceUrl:
                    description: The URL that will be set as the conference URL for
                      any incident on which this response play is run.
                    type: string
                  description:
                    description: A human-friendly description of the response play.
                    type: string
                  from:
                    description: The email of the user attributed to the request.
                      Needs to be a valid email address of a user in the PagerDuty
                      account.
                    type: string
                  name:
                    description: The name of the response play.
                    type: string
                  responder:
                    description: A user and/or escalation policy to be requested as
                      a responder to any incident on which this response play is run.
                      There can be multiple responders defined on a single response
                      play.
                    items:
                      properties:
                        description:
                          description: A human-friendly description of the response
                            play.
                          type: string
                        id:
                          description: ID of the user defined as the responder
                          type: string
                        name:
                          description: The name of the response play.
                          type: string
                        type:
                          description: A string that determines the schema of the
                            object. If not set, the default value is "response_play".
                          type: string
                      type: object
                    type: array
                  respondersMessage:
                    description: The message body of the notification that will be
                      sent to this response play's set of responders. If empty, a
                      default response request notification will be sent.
                    type: string
                  runnability:
                    description: 'String representing how this response play is allowed
                      to be run. Valid options are:'
                    type: string
                  subscriber:
                    description: A user and/or team to be added as a subscriber to
                      any incident on which this response play is run. There can be
                      multiple subscribers defined on a single response play.
                    items:
                      properties:
                        id:
                          description: ID of the user defined as the responder
                          type: string
                        type:
                          description: A string that determines the schema of the
                            object. If not set, the default value is "response_play".
                          type: string
                      type: object
                    type: array
                  subscribersMessage:
                    description: The content of the notification that will be sent
                      to all incident subscribers upon the running of this response
                      play. Note that this includes any users who may have already
                      been subscribed to the incident prior to the running of this
                      response play. If empty, no notifications will be sent.
                    type: string
                  team:
                    description: The ID of the team associated with the response play.
                    type: string
                  type:
                    description: A string that determines the schema of the object.
                      If not set, the default value is "response_play".
                    type: string
                required:
                - from
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PlayStatus defines the observed state of Play.
            properties:
              atProvider:
                properties:
                  id:
                    description: ID of the user defined as the responder
                    type: string
                  responder:
                    description: A user and/or escalation policy to be requested as
                      a responder to any incident on which this response play is run.
                      There can be multiple responders defined on a single response
                      play.
                    items:
                      properties:
                        escalationRule:
                          description: The escalation rules
                          items:
                            properties:
                              escalationDelayInMinutes:
                                description: The number of minutes before an unacknowledged
                                  incident escalates away from this rule.
                                type: number
                              id:
                                description: ID of the user defined as the responder
                                type: string
                              target:
                                description: The targets an incident should be assigned
                                  to upon reaching this rule.
                                items:
                                  properties:
                                    id:
                                      description: ID of the user defined as the responder
                                      type: string
                                    type:
                                      description: A string that determines the schema
                                        of the object. If not set, the default value
                                        is "response_play".
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        numLoops:
                          description: The number of times the escalation policy will
                            repeat after reaching the end of its escalation.
                          type: number
                        onCallHandoffNotifications:
                          description: Determines how on call handoff notifications
                            will be sent for users on the escalation policy. Defaults
                            to "if_has_services". Could be "if_has_services", "always
                          type: string
                        service:
                          description: There can be multiple services associated with
                            a policy.
                          items:
                            properties:
                              id:
                                description: ID of the user defined as the responder
                                type: string
                              type:
                                description: A string that determines the schema of
                                  the object. If not set, the default value is "response_play".
                                type: string
                            type: object
                          type: array
                        team:
                          description: The ID of the team associated with the response
                            play.
                          items:
                            properties:
                              id:
                                description: ID of the user defined as the responder
                                type: string
                              type:
                                description: A string that determines the schema of
                                  the object. If not set, the default value is "response_play".
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
